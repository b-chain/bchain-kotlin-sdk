buildscript {

    ext {
        kotlinVersion = '1.3.60'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }

}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'java-library'
apply plugin: 'maven-publish'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

compileKotlin {

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.3"
        languageVersion = "1.3"
    }

}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

test {
    testLogging.showStandardStreams = true
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.62'
    implementation 'org.msgpack:msgpack-core:0.8.19'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0'
    implementation 'net.consensys.cava:cava-crypto:0.6.0'
    testImplementation 'junit:junit:4.13-beta-3'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.bchain.node'
            artifactId = 'bchain-node'
            version = '2.0.1'
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url "https://dev.cqultra.com:8008/nexus/repository/mjoy-services/"
            credentials {
                username localProperties.getProperty('publish.user')
                password localProperties.getProperty('publish.password')
            }
        }
    }
}

